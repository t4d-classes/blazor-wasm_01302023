@using System.ComponentModel.DataAnnotations

@if (Car is not null) {
  <tr>
    <td>@Car.Id</td>
    <td><input type="text" @bind="carForm.Make" /></td>
    <td><input type="text" @bind="carForm.Model" /></td>
    <td><input type="number" @bind="carForm.Year" /></td>
    <td><input type="text" @bind="carForm.Color" /></td>
    <td><input type="number" @bind="carForm.Price" /></td>
    <td>
      <button type="button" @onclick=@saveCar>Save</button>
      <button type="button" @onclick=@cancelCar>Cancel</button>
    </td>
  </tr>
}

@code {
  [Parameter]
  public ICar? Car { get; set; }

  private CarFormModel carForm = new CarFormModel();

  protected override void OnInitialized()
  {
    if (Car is not null) {
      carForm = new CarFormModel()
      {
        Make = Car.Make ?? "",
        Model = Car.Model ?? "",
        Year = Car.Year ?? 1900,
        Color = Car.Color ?? "",
        Price = Car.Price ?? 0,
      };
    }
  }

  [Parameter]
  public EventCallback<ICar> OnSaveCar { get; set; }
  
  [Parameter]
  public EventCallback OnCancelCar { get; set; }

  private async Task saveCar()
  {
    if (Car is not null) {
      await OnSaveCar.InvokeAsync(new Car() {
        Id = Car.Id,
        Make = carForm.Make,
        Model = carForm.Model,
        Year = carForm.Year,
        Color = carForm.Color,
        Price = carForm.Price,
      });
    }
  }

  private async Task cancelCar()
  {
    await OnCancelCar.InvokeAsync();
  }

  public class CarFormModel
  {
    [Required]
    public string Make { get; set; } = "";

    [Required]
    public string Model { get; set; } = "";
  
    [Required]
    public int Year { get; set; } = 1900;

    [Required]
    public string Color { get; set; } = "";

    [Required]
    public decimal Price { get; set; } = 0;
  }  

}