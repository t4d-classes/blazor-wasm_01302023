@page "/car-tool"

@using ToolsApp.Components.CarTool

<ToolHeader HeaderText="Car Tool" />

<CarTable Cars="@cars" EditCarId="@editCarId"
    OnEditCar="@editCar" OnDeleteCar="@deleteCar"
    OnSaveCar="@saveCar" OnCancelCar="@cancelCar" />

<CarForm ButtonText="Add Car" OnSubmitCar="@addCar"></CarForm>

@code {

  // purpose of this list is for rendering only
  private List<ICar> cars { get; set; } = new List<ICar>() {
    new Car() { Id = 1, Make="Ford", Model="Fusion Hybrid", Year=2020, Color="Blue", Price=45000 },
    new Car() { Id = 2, Make="Tesla", Model="S", Year=2022, Color="Red", Price=115000 },
  };

  private int editCarId = -1;

  private void editCar(int carId)
  {
    editCarId = carId;
  }

  private void cancelCar()
  {
    editCarId = -1;
  }

  private void addCar(INewCar newCar)
  {
    cars.Add(new Car()
      {
        Id = cars.Any() ? cars.Max(c => c.Id) + 1 : 1,
        Make = newCar.Make,
        Model = newCar.Model,
        Year = newCar.Year,
        Color = newCar.Color,
        Price = newCar.Price,
      });
    editCarId = -1;
  }

  private void deleteCar(int carId)
  {
    var car = cars.Find(c => c.Id == carId);
    if (car is not null)
    {
      cars.Remove(car);
    }
    editCarId = -1;
  }

  private void saveCar(Car car)
  {
    var carIndex = cars.FindIndex(c => c.Id == car.Id);
    cars[carIndex] = car;
    editCarId = -1;
  }



}